const { createClient } = require('@supabase/supabase-js');

// Configura√ß√µes
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY;
const SITE_URL = 'https://app.colmeiasolar.com';

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  console.log('‚ö†Ô∏è  Vari√°veis de ambiente n√£o encontradas, mas continuando com instru√ß√µes...');
  console.log('- NEXT_PUBLIC_SUPABASE_URL');
  console.log('- SUPABASE_SERVICE_ROLE_KEY');
  console.log('');
}

// const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY);

async function configureSupabaseUrls() {
  console.log('üîß Configurando URLs do Supabase...');
  
  try {
    // Configurar URLs de autentica√ß√£o
    const authConfig = {
      SITE_URL: SITE_URL,
      URI_ALLOW_LIST: [
        `${SITE_URL}/confirmar-email`,
        `${SITE_URL}/cliente/nova-senha`,
        `${SITE_URL}/cliente/login`,
        SITE_URL
      ].join(','),
      // Templates de email
      MAILER_TEMPLATES_CONFIRM: JSON.stringify({
        subject: 'Confirme seu email - Colmeia Solar',
        content_path: `${SITE_URL}/confirmar-email`,
        content: `
          <h2>Confirme seu email</h2>
          <p>Clique no link abaixo para confirmar seu email:</p>
          <a href="{{ .ConfirmationURL }}">Confirmar Email</a>
        `
      }),
      MAILER_TEMPLATES_RECOVERY: JSON.stringify({
        subject: 'Redefinir senha - Colmeia Solar',
        content_path: `${SITE_URL}/cliente/nova-senha`,
        content: `
          <h2>Redefinir senha</h2>
          <p>Clique no link abaixo para redefinir sua senha:</p>
          <a href="{{ .ConfirmationURL }}">Redefinir Senha</a>
        `
      })
    };

    console.log('üìß Configura√ß√µes que ser√£o aplicadas:');
    console.log(`- Site URL: ${authConfig.SITE_URL}`);
    console.log(`- URLs permitidas: ${authConfig.URI_ALLOW_LIST}`);
    
    // Nota: A configura√ß√£o via API pode n√£o estar dispon√≠vel para todos os projetos
    // Este script serve principalmente para documentar as configura√ß√µes necess√°rias
    
    console.log('\nüö® PROBLEMA IDENTIFICADO: Links de confirma√ß√£o est√£o expirando!');
    console.log('\nüìã CONFIGURA√á√ÉO OBRIGAT√ìRIA NO DASHBOARD DO SUPABASE:');
    console.log('\n1. Acesse o Dashboard do Supabase:');
    if (SUPABASE_URL) {
      console.log(`   https://supabase.com/dashboard/project/${SUPABASE_URL.split('//')[1].split('.')[0]}`);
    } else {
      console.log('   https://supabase.com/dashboard/project/[SEU_PROJECT_ID]');
    }
    
    console.log('\n2. V√° para Authentication > URL Configuration');
    
    console.log('\n3. ‚ö†Ô∏è  CR√çTICO - Configure estas URLs EXATAMENTE:');
    console.log(`   Site URL: ${SITE_URL}`);
    console.log('   Redirect URLs (adicione ambas):');
    console.log(`   ‚úÖ ${SITE_URL}/confirmar-email`);
    console.log(`   ‚úÖ ${SITE_URL}/cliente/nova-senha`);
    
    console.log('\n4. V√° para Authentication > Email Templates');
    
    console.log('\n5. ‚ö†Ô∏è  CR√çTICO - Edite os templates:');
    console.log('   üìß Confirm signup:');
    console.log('      Redirect URL: {{ .SiteURL }}/confirmar-email');
    console.log('   üìß Reset password:');
    console.log('      Redirect URL: {{ .SiteURL }}/cliente/nova-senha');
    
    console.log('\n6. üíæ SALVE todas as configura√ß√µes');
    console.log('\n7. üß™ Teste novamente o cadastro de usu√°rio');
    
    console.log('\n‚ùå SEM ESSA CONFIGURA√á√ÉO:');
    console.log('   - Links redirecionam para "/" em vez de "/confirmar-email"');
    console.log('   - C√≥digos expiram antes de chegar na p√°gina correta');
    console.log('   - Erro: "Email link is invalid or has expired"');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå Erro ao configurar URLs:', error);
    return false;
  }
}

// Executar configura√ß√£o
configureSupabaseUrls()
  .then((success) => {
    if (success) {
      console.log('\nüéâ Script executado com sucesso!');
      console.log('‚ö†Ô∏è  Lembre-se de configurar manualmente no Dashboard do Supabase');
    } else {
      console.log('\n‚ùå Falha na execu√ß√£o do script');
      process.exit(1);
    }
  })
  .catch((error) => {
    console.error('‚ùå Erro inesperado:', error);
    process.exit(1);
  });
