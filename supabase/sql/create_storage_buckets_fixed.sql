-- =====================================================
-- CONFIGURA√á√ÉO DO SUPABASE STORAGE
-- =====================================================
-- Este script cria os buckets necess√°rios para o sistema
-- e configura as pol√≠ticas de acesso adequadas
--
-- INSTRU√á√ïES:
-- 1. Copie todo o conte√∫do deste arquivo
-- 2. Cole no SQL Editor do Supabase Dashboard
-- 3. Execute o script completo

-- =====================================================
-- 1. CRIAR BUCKETS
-- =====================================================

-- Bucket para arquivos de projetos
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
  'project-files',
  'project-files',
  true, -- P√∫blico para facilitar acesso
  52428800, -- 50MB limit
  ARRAY[
    'application/pdf',
    'image/jpeg',
    'image/png',
    'image/gif',
    'image/webp',
    'application/msword',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'application/vnd.ms-excel',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    'text/plain',
    'application/zip',
    'application/x-rar-compressed'
  ]
) ON CONFLICT (id) DO NOTHING;

-- Bucket para documentos de projetos (mais restritivo)
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
  'project-documents',
  'project-documents',
  false, -- Privado, requer autentica√ß√£o
  104857600, -- 100MB limit
  ARRAY[
    'application/pdf',
    'application/msword',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'application/vnd.ms-excel',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    'text/plain'
  ]
) ON CONFLICT (id) DO NOTHING;

-- Bucket para avatares de usu√°rios
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
  'user-avatars',
  'user-avatars',
  true, -- P√∫blico
  5242880, -- 5MB limit
  ARRAY[
    'image/jpeg',
    'image/png',
    'image/gif',
    'image/webp'
  ]
) ON CONFLICT (id) DO NOTHING;

-- =====================================================
-- 2. POL√çTICAS RLS PARA STORAGE
-- =====================================================

-- =====================================================
-- 2.1 POL√çTICAS PARA project-files
-- =====================================================

-- Permitir que usu√°rios autenticados vejam arquivos de projetos
CREATE POLICY "Allow authenticated users to view project files" ON storage.objects
  FOR SELECT USING (
    bucket_id = 'project-files' AND 
    auth.role() = 'authenticated'
  );

-- Permitir que admins/superadmins fa√ßam upload de arquivos
CREATE POLICY "Allow admin/superadmin to upload project files" ON storage.objects
  FOR INSERT WITH CHECK (
    bucket_id = 'project-files' AND
    (auth.jwt()->>'role')::text IN ('admin', 'superadmin')
  );

-- Permitir que admins/superadmins deletem arquivos
CREATE POLICY "Allow admin/superadmin to delete project files" ON storage.objects
  FOR DELETE USING (
    bucket_id = 'project-files' AND
    (auth.jwt()->>'role')::text IN ('admin', 'superadmin')
  );

-- Permitir que admins/superadmins atualizem arquivos
CREATE POLICY "Allow admin/superadmin to update project files" ON storage.objects
  FOR UPDATE USING (
    bucket_id = 'project-files' AND
    (auth.jwt()->>'role')::text IN ('admin', 'superadmin')
  );

-- =====================================================
-- 2.2 POL√çTICAS PARA project-documents
-- =====================================================

-- Permitir que usu√°rios vejam documentos de seus pr√≥prios projetos
CREATE POLICY "Allow users to view their project documents" ON storage.objects
  FOR SELECT USING (
    bucket_id = 'project-documents' AND
    auth.role() = 'authenticated' AND
    (
      -- Admins/superadmins podem ver todos
      (auth.jwt()->>'role')::text IN ('admin', 'superadmin') OR
      -- Clientes podem ver apenas documentos de projetos que criaram
      (
        (auth.jwt()->>'role')::text = 'cliente' AND
        (storage.foldername(name))[1] IN (
          SELECT p.id::text 
          FROM public.projects p 
          WHERE p.created_by = auth.uid()
        )
      )
    )
  );

-- Permitir que admins/superadmins fa√ßam upload de documentos
CREATE POLICY "Allow admin/superadmin to upload project documents" ON storage.objects
  FOR INSERT WITH CHECK (
    bucket_id = 'project-documents' AND
    (auth.jwt()->>'role')::text IN ('admin', 'superadmin')
  );

-- Permitir que admins/superadmins deletem documentos
CREATE POLICY "Allow admin/superadmin to delete project documents" ON storage.objects
  FOR DELETE USING (
    bucket_id = 'project-documents' AND
    (auth.jwt()->>'role')::text IN ('admin', 'superadmin')
  );

-- =====================================================
-- 2.3 POL√çTICAS PARA user-avatars
-- =====================================================

-- Permitir que usu√°rios vejam todos os avatares
CREATE POLICY "Allow authenticated users to view avatars" ON storage.objects
  FOR SELECT USING (
    bucket_id = 'user-avatars' AND 
    auth.role() = 'authenticated'
  );

-- Permitir que usu√°rios fa√ßam upload de seus pr√≥prios avatares
CREATE POLICY "Allow users to upload their own avatar" ON storage.objects
  FOR INSERT WITH CHECK (
    bucket_id = 'user-avatars' AND
    auth.role() = 'authenticated' AND
    (storage.foldername(name))[1] = auth.uid()::text
  );

-- Permitir que usu√°rios atualizem seus pr√≥prios avatares
CREATE POLICY "Allow users to update their own avatar" ON storage.objects
  FOR UPDATE USING (
    bucket_id = 'user-avatars' AND
    auth.role() = 'authenticated' AND
    (storage.foldername(name))[1] = auth.uid()::text
  );

-- Permitir que usu√°rios deletem seus pr√≥prios avatares
CREATE POLICY "Allow users to delete their own avatar" ON storage.objects
  FOR DELETE USING (
    bucket_id = 'user-avatars' AND
    auth.role() = 'authenticated' AND
    (storage.foldername(name))[1] = auth.uid()::text
  );

-- =====================================================
-- 3. VERIFICA√á√ïES E LOGS
-- =====================================================

-- Verificar se os buckets foram criados
DO $$
BEGIN
  RAISE NOTICE 'Verificando buckets criados...';
  
  IF EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'project-files') THEN
    RAISE NOTICE '‚úÖ Bucket project-files criado com sucesso';
  ELSE
    RAISE NOTICE '‚ùå Falha ao criar bucket project-files';
  END IF;
  
  IF EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'project-documents') THEN
    RAISE NOTICE '‚úÖ Bucket project-documents criado com sucesso';
  ELSE
    RAISE NOTICE '‚ùå Falha ao criar bucket project-documents';
  END IF;
  
  IF EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'user-avatars') THEN
    RAISE NOTICE '‚úÖ Bucket user-avatars criado com sucesso';
  ELSE
    RAISE NOTICE '‚ùå Falha ao criar bucket user-avatars';
  END IF;
END $$;

-- Listar pol√≠ticas criadas
SELECT 
  schemaname,
  tablename,
  policyname,
  permissive,
  roles,
  cmd,
  qual
FROM pg_policies 
WHERE schemaname = 'storage' AND tablename = 'objects'
ORDER BY policyname;

-- =====================================================
-- 4. COMENT√ÅRIOS E DOCUMENTA√á√ÉO
-- =====================================================

COMMENT ON SCHEMA storage IS 'Schema do Supabase Storage para gerenciamento de arquivos';

-- Coment√°rios nos buckets
UPDATE storage.buckets 
SET 
  public = true,
  file_size_limit = 52428800
WHERE id = 'project-files';

UPDATE storage.buckets 
SET 
  public = false,
  file_size_limit = 104857600
WHERE id = 'project-documents';

UPDATE storage.buckets 
SET 
  public = true,
  file_size_limit = 5242880
WHERE id = 'user-avatars';

-- =====================================================
-- FINALIZA√á√ÉO
-- =====================================================

DO $$
BEGIN
  RAISE NOTICE 'üéâ CONFIGURA√á√ÉO DO SUPABASE STORAGE CONCLU√çDA!';
  RAISE NOTICE '';
  RAISE NOTICE 'üìã BUCKETS CRIADOS:';
  RAISE NOTICE '   - project-files (p√∫blico, 50MB, m√∫ltiplos tipos)';
  RAISE NOTICE '   - project-documents (privado, 100MB, documentos)';
  RAISE NOTICE '   - user-avatars (p√∫blico, 5MB, imagens)';
  RAISE NOTICE '';
  RAISE NOTICE 'üîí POL√çTICAS RLS CONFIGURADAS:';
  RAISE NOTICE '   - Admins: acesso total a todos os buckets';
  RAISE NOTICE '   - Clientes: acesso limitado aos pr√≥prios projetos';
  RAISE NOTICE '   - Usu√°rios: podem gerenciar pr√≥prios avatares';
  RAISE NOTICE '';
  RAISE NOTICE 'üöÄ PR√ìXIMO PASSO: Testar upload/download de arquivos!';
END $$;
